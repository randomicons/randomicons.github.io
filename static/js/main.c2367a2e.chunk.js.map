{"version":3,"sources":["images/dodgerush.png","images/sometodo.png","images/walmart.png","components/App.module.sass","components/TransitionSection.js","components/Nav.js","components/App.js","serviceWorker.js","index.js","components/TransitionSection.module.sass"],"names":["module","exports","__webpack_require__","p","line","animToggle","toggle","face","container","TransitionSection","_this","this","dir","props","react_default","a","createElement","Transition","in","show","appear","mountOnEnter","unmountOnExit","addEndListener","node","done","rotation_div","childNodes","move_div","contentDiv","enterAnim","TimelineLite","onComplete","to","startAt","y","concat","ease","Expo","easeInOut","pause","from","leaveAnim","linear","doInitAnim","play","style","width","Math","abs","cos","PI","sin","height","transform","offsetWidth","offsetHeight","TweenMax","set","rotation","className","styles","zIndex","background","backgroundRepeat","backgroundSize","backgroundPosition","content","numPages","up","react_fontawesome_index_es","onClick","arrowAction","icon","children","down","Component","Nav","effect","e","elem","target","right","clientWidth","rect","getBoundingClientRect","x","clientX","left","setProperty","links","map","link","onMouseEnter","onMouseLeave","action","name","library","add","faChevronDown","faChevronUp","info","title","img","dodgerush","sometodo","github","walmart","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changePage","change","setState","page","state","sign","toHome","noAnim","document","getElementById","scrollIntoView","behavior","toContact","toResume","window","location","pageNum","_this2","infoNoAnim","src","href","infoAnim","i","TransitionSection_TransitionSection","checkPage","home","homeAnim","id","displayedContent","contact","contactAnim","Nav_Nav","react_switch_default","onChange","checked","Boolean","hostname","match","ReactDOM","render","components_App","navigator","serviceWorker","ready","then","registration","unregister","dot"],"mappings":"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","file":"static/js/main.c2367a2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dodgerush.215dc01f.png\";","module.exports = __webpack_public_path__ + \"static/media/sometodo.91c0dd92.png\";","module.exports = __webpack_public_path__ + \"static/media/walmart.ae3e0c92.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"App_line__3CBym\",\"animToggle\":\"App_animToggle__1L_qV\",\"toggle\":\"App_toggle__M9_IM\",\"face\":\"App_face__2i4rA\",\"container\":\"App_container__31WpY\"};","import React, {Component} from \"react\"\nimport {Transition} from \"react-transition-group\"\nimport {Expo, TimelineLite, TweenMax} from \"gsap\"\nimport styles from \"./TransitionSection.module.sass\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport PropTypes from \"prop-types\"\nimport {numPages} from './App'\n\nconst transSpeed = 1\nconst rotAngle = 45\nexport default class TransitionSection extends Component {\n\n  render() {\n    const dir = this.props.dir\n    return (\n      <Transition\n        in={this.props.show}\n        appear mountOnEnter unmountOnExit\n        addEndListener={(node, done) => {\n          const rotation_div = node.childNodes[0]\n          const move_div = rotation_div.childNodes[0]\n          const contentDiv = move_div.childNodes[0]\n          const enterAnim = new TimelineLite({onComplete: done})\n            .to(move_div, transSpeed, {startAt: {y: `${dir * 100}%`}, y: \"0%\", ease: Expo.easeInOut}, 0).pause()\n            .from(contentDiv.childNodes, transSpeed, {y: dir * -0}, 0)\n            .pause()\n\n          const leaveAnim = new TimelineLite({onComplete: done})\n            .to(contentDiv.childNodes, transSpeed, {y: dir * 0}, 0)\n            .to(move_div, transSpeed, {y: `${dir * -100}%`, ease: Expo.linear, onComplete: done,}, 0)\n            .to(contentDiv, transSpeed, {y: `${dir * 100}%`, ease: Expo.linear}, 0)\n            .pause()\n\n          if (this.props.show && this.props.doInitAnim) {\n            enterAnim.play()\n          }\n          if (this.props.show) {\n            move_div.style.width = `calc(100vw * ${Math.abs(Math.cos(rotAngle * Math.PI / 180))} + 100vh * ${Math.abs(Math.sin(rotAngle * Math.PI / 180))})`\n            move_div.style.height = `calc(100vw * ${Math.abs(Math.sin(rotAngle * Math.PI / 180))} + 100vh * ${Math.abs(Math.cos(rotAngle * Math.PI / 180))})`\n            move_div.style.transform = `translate(calc(-1 * (100vw - ${move_div.offsetWidth}) / 2), calc(-1 * (100vh - ${move_div.offsetHeight}) / 2)`\n            rotation_div.style.transform = `rotate3d(0,0,1,${rotAngle}deg)`\n            TweenMax.set(contentDiv, {rotation: -1 * rotAngle})\n          } else if (!this.props.show) {\n            leaveAnim.play()\n          }\n        }}\n      >\n        <div className={styles.container}>\n          <div className={styles.rotation_div} style={{zIndex: this.props.zIndex}}>\n            <div className={styles.move_div} style={{\n              background: this.props.background,\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\"\n            }}>\n              <div className={styles.content}>\n                {this.props.zIndex !== numPages && <div className={styles.up}>\n                  <span><FontAwesomeIcon onClick={this.props.arrowAction(-1)} icon={\"chevron-up\"}/></span>\n                </div>}\n                {this.props.children}\n                {this.props.zIndex !== 0 &&\n                < div className={styles.down}>\n                  <span><FontAwesomeIcon onClick={this.props.arrowAction(1)} icon={\"chevron-down\"}/></span>\n                </div>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </Transition>\n    )\n  }\n}\n\nTransitionSection.propTypes = {\n  show: PropTypes.bool.isRequired,\n  background: PropTypes.string.isRequired,\n  arrowAction: PropTypes.func.isRequired,\n  doInitAnim: PropTypes.bool,\n  dir: PropTypes.number.isRequired\n}\n","import React, {Component} from 'react'\n// noinspection ES6UnusedImports\nimport styles from './Nav.module.sass'\n\nexport default class Nav extends Component {\n\n  render() {\n    const effect = (e) => {\n      const elem = e.target\n      const tolerance = 5\n      const left = 0\n      const right = elem.clientWidth\n      let rect = e.target.getBoundingClientRect()\n      let x = e.clientX - rect.left\n      if (x - tolerance < left) x = left\n      if (x + tolerance > right) x = right\n      elem.style.setProperty('--x', `${x}px`)\n    }\n    const links = this.props.links.map(link => <button onMouseEnter={effect} onMouseLeave={effect}\n                                                       onClick={link.action}>{link.name}</button>)\n    return (\n      <nav>\n        {links}\n      </nav>\n    )\n  }\n}","//@flow\nimport React, {Component} from 'react'\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faChevronDown, faChevronUp} from '@fortawesome/free-solid-svg-icons'\nimport TransitionSection from \"./TransitionSection\"\nimport styles from \"./App.module.sass\"\nimport dodgerush from \"../images/dodgerush.png\"\nimport sometodo from \"../images/sometodo.png\"\nimport walmart from \"../images/walmart.png\"\nimport Nav from \"./Nav\"\nimport Switch from \"react-switch\"\n\n\nlibrary.add(faChevronDown, faChevronUp)\n\nexport const numPages = 5\n\nconst info = [\n  {\n    title: \"Dodgerush\",\n    img: dodgerush,\n    p: <p>I made this game. Called it (for the SEO mainly) <em>Dodgerush : Puzzle Tower Defense.</em></p>,\n    link: \"https://play.google.com/store/apps/details?id=com.dodge.rush\"\n  },\n  {\n    title: \"Some-Todo\",\n    img: sometodo,\n    p: <p>All the todo apps had too little of what I wanted and too much of what I didn't want. So I made my\n      own.</p>,\n    link: \"https://sometodo.herokuapp.com/\",\n    github: \"https://github.com/randomicons/something-todo\"\n  },\n  {\n    title: \"Walmart Energy Forecasting\",\n    img: walmart,\n    p: <p>Forecasted energy usage of Walmart Stores and created a UI to display and interact with the\n      models.</p>,\n  },\n  {\n    title: \"This website o_o!\",\n    img: null,\n    p: <p>What a great website.</p>,\n    github: \"https://github.com/randomicons/randomicons.github.io\"\n  }\n]\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {page: 0, noAnim: false}\n  }\n\n  checkPage(pageNum) {\n    return this.state.page === pageNum\n  }\n\n  changePage = (change) => {\n    return () => this.setState({page: this.state.page + change, dir: Math.sign(change)})\n  }\n\n  toHome = () => {\n    this.setState({page: 0, dir: -1})\n    if (this.state.noAnim)\n      document.getElementById('home').scrollIntoView({behavior: \"smooth\"})\n  }\n  toContact = () => {\n    this.setState({page: numPages, dir: 1})\n    if (this.state.noAnim)\n      document.getElementById('contact').scrollIntoView({behavior: \"smooth\"})\n  }\n  toResume = () => {\n    window.location = 'https://docs.google.com/document/d/1LmQIE1kGwN_K5hh8aJbSTbbrUpppgVB156wl7xRTiQ4/edit?usp=sharing'\n  }\n\n  render() {\n    const dir = this.state.dir\n    let infoNoAnim = info.map((content) =>\n      <section>\n        <h2>{content.title}</h2>\n        <img src={content.img} style={{width: \"100%\"}}/>\n        {content.p}\n        <p>\n          {content.link && <a href={content.link}>View</a>}\n          {content.github && <a href={content.github}>Github</a>}\n        </p>\n      </section>)\n    const infoAnim = infoNoAnim.map((content, i) =>\n      <TransitionSection background={\"#f9f9f9\"} dir={dir} doInitAnim zIndex={numPages - i - 1}\n                         show={this.checkPage(i + 1)}\n                         arrowAction={this.changePage}>\n        {content}\n      </TransitionSection>)\n    infoNoAnim = infoNoAnim.map((content) => <div className={styles.container}>{content}</div>)\n    let home = [\n      <section style={{background: \"#f9f9f9\"}}>\n        <p>A bird in the hand is worth 2 in the bush</p>\n        <h1>Sriram Bhat</h1>\n      </section>,\n      <div className={styles.line}></div>\n    ]\n    const homeAnim =\n      <TransitionSection background={\"#f9f9f9\"} dir={dir} doInitAnim zIndex={numPages}\n                         show={this.checkPage(0)}\n                         arrowAction={this.changePage}>\n        {home}\n      </TransitionSection>\n    home = <div id=\"home\" className={styles.container}>{home}</div>\n    let contact = [\n      <div className={styles.line}></div>,\n      <section>\n        <h2>Contact</h2>\n        <p>email: srirambhat7@gmail.com <br/>phone: 469-579-8177</p>\n        <p><a href={\"https://github.com/randomicons\"}>My Github</a></p>\n      </section>\n    ]\n    const contactAnim =\n      <TransitionSection background={\"#f9f9f9\"} dir={dir} doInitAnim zIndex={0}\n                         show={this.checkPage(numPages)}\n                         arrowAction={this.changePage}>\n        {contact}\n      </TransitionSection>\n    contact = <div id=\"contact\" className={styles.container}>{contact}</div>\n    let displayedContent\n    if (this.state.noAnim) {\n      displayedContent = [home, infoNoAnim, contact]\n    } else {\n      displayedContent = [homeAnim, infoAnim, contactAnim]\n    }\n\n    return (\n      <main>\n        <Nav links={[\n          {name: \"Home\", action: this.toHome},\n          {name: \"Contact\", action: this.toContact},\n          {name: \"Resume\", action: this.toResume},\n        ]}/>\n        <label className={styles.animToggle}>\n          <span>Animation</span>\n          <Switch onChange={(checked) => this.setState({noAnim: !checked})} className={styles.toggle}\n                  checked={!this.state.noAnim}/>\n        </label>\n        {displayedContent}\n      </main>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TransitionSection_container__1kgb-\",\"rotation_div\":\"TransitionSection_rotation_div__TkZf6\",\"move_div\":\"TransitionSection_move_div__3rOIB\",\"content\":\"TransitionSection_content__u6Tva\",\"up\":\"TransitionSection_up__30P60\",\"down\":\"TransitionSection_down__26eII\",\"dot\":\"TransitionSection_dot__19_Er\"};"],"sourceRoot":""}