{"version":3,"sources":["components/App.module.sass","images/dodgerush.png","images/sometodo.png","images/walmart.png","components/TransitionSection.js","components/App.js","serviceWorker.js","index.js","components/TransitionSection.module.sass"],"names":["module","exports","line","face","__webpack_require__","p","TransitionSection","_this","this","react_default","a","createElement","Transition","in","props","show","appear","mountOnEnter","unmountOnExit","addEndListener","node","done","rotation_div","childNodes","move_div","contentDiv","doInitAnim","TweenMax","to","startAt","y","ease","Expo","easeInOut","onComplete","style","width","concat","Math","abs","cos","PI","sin","height","transform","offsetWidth","offsetHeight","set","rotation","linear","className","styles","container","zIndex","background","backgroundRepeat","backgroundSize","backgroundPosition","content","children","down","react_fontawesome_index_es","onClick","arrowAction","icon","Component","library","add","faChevronDown","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","incPage","setState","page","state","pageNum","TransitionSection_TransitionSection","checkPage","src","dodgerush","opacity","sometodo","walmart","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","dot"],"mappings":"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","file":"static/js/main.450ba1c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"App_line__3CBym\",\"face\":\"App_face__2i4rA\"};","module.exports = __webpack_public_path__ + \"static/media/dodgerush.527510bf.png\";","module.exports = __webpack_public_path__ + \"static/media/sometodo.91c0dd92.png\";","module.exports = __webpack_public_path__ + \"static/media/walmart.ae3e0c92.png\";","import React, {Component} from \"react\"\nimport {Transition} from \"react-transition-group\"\nimport {Expo, TweenMax} from \"gsap\"\nimport styles from \"./TransitionSection.module.sass\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport PropTypes from \"prop-types\"\n\nconst transSpeed = 1\nconst rotAngle = 35\nexport default class TransitionSection extends Component {\n\n  render() {\n    return (\n      <Transition\n        in={this.props.show}\n        appear mountOnEnter unmountOnExit\n        addEndListener={(node, done) => {\n          const rotation_div = node.childNodes[0]\n          const move_div = rotation_div.childNodes[0]\n          const contentDiv = move_div.childNodes[0]\n\n          if (this.props.show && this.props.doInitAnim) {\n            TweenMax.to(move_div, transSpeed, {startAt: {y: \"100%\"}, y: \"0%\", ease: Expo.easeInOut, onComplete: done})\n          }\n          if (this.props.show) {\n            move_div.style.width = `calc(100vw * ${Math.abs(Math.cos(rotAngle * Math.PI / 180))} + 100vh * ${Math.abs(Math.sin(rotAngle * Math.PI / 180))})`\n            move_div.style.height = `calc(100vw * ${Math.abs(Math.sin(rotAngle * Math.PI / 180))} + 100vh * ${Math.abs(Math.cos(rotAngle * Math.PI / 180))})`\n            move_div.style.transform = `translate(calc(-1 * (100vw - ${move_div.offsetWidth}) / 2), calc(-1 * (100vh - ${move_div.offsetHeight}) / 2)`\n            rotation_div.style.transform = `rotate3d(0,0,1,${rotAngle}deg)`\n            TweenMax.set(contentDiv, {rotation: -1 * rotAngle})\n          } else if (!this.props.show) {\n            TweenMax.to(move_div, transSpeed, {y: \"-100%\", ease: Expo.linear, onComplete: done,})\n            TweenMax.to(contentDiv, transSpeed, {y: \"100%\", ease: Expo.linear})\n          }\n        }}\n      >\n        <div className={styles.container}>\n          <div className={styles.rotation_div} style={{zIndex: this.props.zIndex}}>\n            <div className={styles.move_div} style={{\n              background: this.props.background,\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\"\n            }}>\n              <div className={styles.content}>\n                {this.props.children}\n                <div className={styles.down}>\n                  <span><FontAwesomeIcon onClick={this.props.arrowAction} icon={\"chevron-down\"}/></span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Transition>\n    )\n  }\n}\n\nTransitionSection.propTypes = {\n  show: PropTypes.bool.isRequired,\n  background: PropTypes.string.isRequired,\n  arrowAction: PropTypes.func.isRequired,\n  doInitAnim: PropTypes.bool\n}\n","//@flow\nimport React, {Component} from 'react'\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faChevronDown} from '@fortawesome/free-solid-svg-icons'\nimport TransitionSection from \"./TransitionSection\"\nimport styles from \"./App.module.sass\"\nimport dodgerush from \"../images/dodgerush.png\"\nimport sometodo from \"../images/sometodo.png\"\nimport walmart from \"../images/walmart.png\"\n\n\nlibrary.add(faChevronDown)\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {page: 0}\n  }\n\n  checkPage(pageNum) {\n    return this.state.page === pageNum\n  }\n\n  incPage = () => {\n    this.setState({page: this.state.page + 1})\n  }\n\n  render() {\n    let zIndex = 4\n    let pageNum = 0\n    return (\n      <main>\n        <TransitionSection background={\"#f9f9f9\"} doInitAnim zIndex={zIndex--} show={this.checkPage(pageNum++)}\n                           arrowAction={this.incPage}>\n          <div style={{background: \"#f9f9f9\"}}>\n            <p>A bird in the hand is worth 2 in the bush</p>\n            <h1>Sriram Bhat</h1>\n          </div>\n          <div className={styles.line}></div>\n        </TransitionSection>\n        <TransitionSection background={\"#f9f9f9\"} doInitAnim zIndex={zIndex--} show={this.checkPage(pageNum++)}\n                           arrowAction={this.incPage}>\n          <div style={{background: \"#f9f9f9\", width: \"50vw\"}}>\n            <img src={dodgerush} style={{opacity: 1, width: \"100%\"}}/>\n            <h3>Dodgerush</h3>\n            <div><p>I made this game. Called it (for the SEO mainly) <em>Dodgerush : Puzzle Tower Defense.</em></p>\n            </div>\n          </div>\n        </TransitionSection>\n        <TransitionSection background={\"#f9f9f9\"} doInitAnim zIndex={zIndex--} show={this.checkPage(pageNum++)}\n                           arrowAction={this.incPage}>\n          <div style={{background: \"#f9f9f9\", width: \"50vw\"}}>\n            <img src={sometodo} style={{opacity: 1, height: \"70vh\"}}/>\n            <h3>Some-Todo</h3>\n            <div><p>All the todo apps had too little of what I wanted and too much of what I didn't want. So I made my\n              own.</p>\n            </div>\n          </div>\n        </TransitionSection>\n        <TransitionSection background={\"#f9f9f9\"} zIndex={zIndex--} show={this.checkPage(pageNum++)}\n                           arrowAction={this.incPage}>\n          <div style={{background: \"#f9f9f9\", width: \"50vw\"}}>\n            <img src={walmart} style={{opacity: 1, height: \"70vh\"}}/>\n            <h3>Walmart Energy Forecasting</h3>\n            <div><p>Forecasted energy usage of Walmart Stores and created a UI to display and interact with the\n              models.</p>\n            </div>\n          </div>\n        </TransitionSection>\n        {/*{*/}\n        {/*  <Transition*/}\n        {/*    show={this.checkPage(1)}*/}\n        {/*    appear mountOnEnter unmountOnExit*/}\n        {/*    onEnter={node => TweenMax.set(node, {y: \"-100vh\"})}*/}\n        {/*    onEntered={node => TweenMax.set(node, {y: \"0vh\"})}*/}\n        {/*  >*/}\n        {/*    <section style={{background: \"#f00\", height: \"100vh\"}}><p>Some nonsense</p></section>*/}\n        {/*  </Transition>*/}\n        {/*}*/}\n      </main>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TransitionSection_container__1kgb-\",\"rotation_div\":\"TransitionSection_rotation_div__TkZf6\",\"move_div\":\"TransitionSection_move_div__3rOIB\",\"content\":\"TransitionSection_content__u6Tva\",\"down\":\"TransitionSection_down__26eII\",\"dot\":\"TransitionSection_dot__19_Er\"};"],"sourceRoot":""}